import { ReplReadline } from "./readline";
export declare function wrapSexpr(doc: ReplReadline, open: string, close: string, start?: number, end?: number): void;
export declare function splitSexp(doc: ReplReadline, start?: number): void;
export declare function joinSexp(doc: ReplReadline, start?: number): void;
export declare function spliceSexp(doc: ReplReadline, start?: number): void;
export declare function killBackwardList(doc: ReplReadline, start?: number): number;
export declare function killForwardList(doc: ReplReadline, start?: number): number;
export declare function spliceSexpKillingBackward(doc: ReplReadline, start?: number): void;
export declare function spliceSexpKillingForward(doc: ReplReadline, start?: number): void;
export declare function forwardSlurpSexp(doc: ReplReadline, start?: number): void;
export declare function backwardSlurpSexp(doc: ReplReadline, start?: number): void;
export declare function forwardBarfSexp(doc: ReplReadline, start?: number): void;
export declare function backwardBarfSexp(doc: ReplReadline, start?: number): void;
export declare function open(doc: ReplReadline, pair: string, start?: number): void;
export declare function close(doc: ReplReadline, close: string, start?: number): void;
export declare function backspace(doc: ReplReadline, start?: number, end?: number): void;
export declare function deleteForward(doc: ReplReadline, start?: number, end?: number): void;
export declare function stringQuote(doc: ReplReadline, start?: number, end?: number): void;
export declare function growSelection(doc: ReplReadline, start?: number, end?: number): void;
export declare function shrinkSelection(doc: ReplReadline): void;
export declare function raiseSexp(doc: ReplReadline, start?: number, end?: number): void;
export declare function convolute(doc: ReplReadline, start?: number, end?: number): void;
